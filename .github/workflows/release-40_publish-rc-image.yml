name: Release - Publish RC Container image
# see https://github.com/paritytech/release-engineering/issues/97#issuecomment-1651372277

on:
  workflow_dispatch:
    inputs:
      release_id:
        description: 'Release ID'
        required: true
        type: string
        # TODO: to be removed, this eases testing
        default: "62185729"
      registry:
        description: "Container registry"
        required: true
        type: string
        default: docker.io/parity

env:
  RELEASE_ID: ${{ inputs.release_id }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # paritytech
  OWNER: ${{ github.repository_owner }}
  # polkadot
  REPO: ${{ github.event.repository.name }}

jobs:
  fetch-artifacts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Fetch all artifacts
        run: |
          . ./scripts/ci/common/lib.sh
          fetch_release_artifacts

      - name: Cache the artifacts
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: artifacts-${{ github.sha }}
          path: |
            artifacts/**/*

  build-container:
    runs-on: ubuntu-latest
    needs: fetch-artifacts

    strategy:
      matrix:
        binary: ["polkadot", "staking-miner"]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Get artifacts from cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: artifacts-${{ github.sha }}
          path: |
            artifacts/**/*

      - name: Check sha256 ${{ matrix.binary }}
        working-directory: ./artifacts
        run: |
          . ../scripts/ci/common/lib.sh

          echo "Checking binary ${{ matrix.binary }}"
          check_sha256 ${{ matrix.binary }} && echo "OK" || echo "ERR"

      # - name: Check GPG ${{ matrix.binary }}
      #   working-directory: ./artifacts
      #   run: |
      #     . ../scripts/ci/common/lib.sh
      #     # TODO import relevant GPG keys
      #     check_gpg ${{ matrix.binary }}

      - name: Build Injected Container image for ${{ matrix.binary }}
        env:
            ENGINE: docker
            BINARY: ${{ matrix.binary }}
            BIN_FOLDER: artifacts
        run: |
          echo "Building container for ${{ matrix.binary }}"
          ./scripts/ci/dockerfiles/build-injected.sh

      - name: Push Container image
        env:
          IMAGE: ${{ inputs.registry }}/${{ matrix.binary }}
        run: |
          echo "TODO Pushing image to $IMAGE"
